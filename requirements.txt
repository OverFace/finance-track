FastAPI 스타일에 맞춰 Router–Service–Model 레이어로 구성.

 MVC의 “Controller” -> "Router"
 MVC의 "Model" -> "ORM 모델(Model)"
 MVC의 "View" -> "JSON 응답(Service)"

장점.
1. 책임 분리
- Router: HTTP 요청/응답 처리
- Service: 핵심 비즈니스 로직
- Model/Schema: 데이터 정의
- Core/Security: 공통 유틸 함수

2. 확장·유지보수 용이
- 인증 외 다른 모듈(자산, CSV, 시세)도 같은 패턴으로 폴더 만들어 일관된 구조 유지
- 테스트 커버리지 작성·관리하기 수월

3. MVC와 호환
- 전통 MVC에 비해 View가 없어졌을 뿐, “Controller”→Router, “Model”→ORM, “View”→JSON 스키마 로 자연스럽게 매핑
